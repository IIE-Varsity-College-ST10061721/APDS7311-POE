{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reesa\\\\employee-payments-portal\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport jwt_decode from 'jwt-decode';\nimport Login from './components/Login';\nimport PaymentForm from './components/PaymentForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n\n  // Helper function to check if the token is expired\n  const isTokenExpired = token => {\n    if (!token) return true;\n    try {\n      const {\n        exp\n      } = jwt_decode(token);\n      return exp < Date.now() / 1000; // Check if the token's expiration is in the past\n    } catch {\n      return true; // If decoding fails, treat token as expired\n    }\n  };\n\n  // Check token expiration on initial render\n  useEffect(() => {\n    if (isTokenExpired(token)) {\n      setToken(null);\n      localStorage.removeItem('token'); // Clear token from localStorage if expired\n    }\n  }, [token]);\n\n  // Function to handle login and set token\n  const handleLogin = newToken => {\n    setToken(newToken);\n    localStorage.setItem('token', newToken); // Save token in localStorage\n  };\n\n  // Render either the PaymentForm or Login component based on token presence and validity\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: token ? /*#__PURE__*/_jsxDEV(PaymentForm, {\n      token: token\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {\n      setToken: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"mJug+XQJNJ/AC5RwNqiId8AW9jg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jwt_decode","Login","PaymentForm","jsxDEV","_jsxDEV","App","_s","token","setToken","localStorage","getItem","isTokenExpired","exp","Date","now","removeItem","handleLogin","newToken","setItem","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/reesa/employee-payments-portal/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport jwt_decode from 'jwt-decode';\nimport Login from './components/Login';\nimport PaymentForm from './components/PaymentForm';\n\nconst App = () => {\n    const [token, setToken] = useState(localStorage.getItem('token') || null);\n\n    // Helper function to check if the token is expired\n    const isTokenExpired = (token) => {\n        if (!token) return true;\n        try {\n            const { exp } = jwt_decode(token);\n            return exp < Date.now() / 1000; // Check if the token's expiration is in the past\n        } catch {\n            return true; // If decoding fails, treat token as expired\n        }\n    };\n\n    // Check token expiration on initial render\n    useEffect(() => {\n        if (isTokenExpired(token)) {\n            setToken(null);\n            localStorage.removeItem('token'); // Clear token from localStorage if expired\n        }\n    }, [token]);\n\n    // Function to handle login and set token\n    const handleLogin = (newToken) => {\n        setToken(newToken);\n        localStorage.setItem('token', newToken); // Save token in localStorage\n    };\n\n    // Render either the PaymentForm or Login component based on token presence and validity\n    return (\n        <div>\n            {token ? (\n                <PaymentForm token={token} />\n            ) : (\n                <Login setToken={handleLogin} />\n            )}\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACW,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;;EAEzE;EACA,MAAMC,cAAc,GAAIJ,KAAK,IAAK;IAC9B,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI;IACvB,IAAI;MACA,MAAM;QAAEK;MAAI,CAAC,GAAGZ,UAAU,CAACO,KAAK,CAAC;MACjC,OAAOK,GAAG,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IACpC,CAAC,CAAC,MAAM;MACJ,OAAO,IAAI,CAAC,CAAC;IACjB;EACJ,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACZ,IAAIY,cAAc,CAACJ,KAAK,CAAC,EAAE;MACvBC,QAAQ,CAAC,IAAI,CAAC;MACdC,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;IACtC;EACJ,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMS,WAAW,GAAIC,QAAQ,IAAK;IAC9BT,QAAQ,CAACS,QAAQ,CAAC;IAClBR,YAAY,CAACS,OAAO,CAAC,OAAO,EAAED,QAAQ,CAAC,CAAC,CAAC;EAC7C,CAAC;;EAED;EACA,oBACIb,OAAA;IAAAe,QAAA,EACKZ,KAAK,gBACFH,OAAA,CAACF,WAAW;MAACK,KAAK,EAAEA;IAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE7BnB,OAAA,CAACH,KAAK;MAACO,QAAQ,EAAEQ;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAClC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACjB,EAAA,CAtCID,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAwCT,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}